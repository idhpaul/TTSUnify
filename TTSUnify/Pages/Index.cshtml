@page
@model IndexModel
@{
    ViewData["Title"] = "Index";
}

@section Styles {
    @* <link rel="stylesheet" href="~/css/Index.css" /> *@
    <style>
        .input-group {
            margin-bottom: 10px;
        }

        .input-group input[type="text"] {
            width: 800px;
            margin-right: 10px;
        }

        /* Solid border */
        hr.solid {
            border-top: 3px solid #bbb;
        }

        textarea {
            width: 100%;
            min-height: 100px;
            box-sizing: border-box;
            padding: 10px;
            font-size: 16px;
            line-height: 1.5;
            resize: none; /* 사용자가 크기를 조절하지 못하게 함 */
            overflow: hidden; /* 스크롤 바 숨김 */
        }
        
    </style>
}

@section Scripts {
    <script>
        // 텍스트 영역 크기 자동 조절 스크립트
        const textarea = document.getElementById('autoResize');

        textarea.addEventListener('input', function () {
            this.style.height = 'auto';
            this.style.height = 20+(this.scrollHeight) + 'px';
        });


        document.addEventListener('DOMContentLoaded', function () {
            let inputCount = 1;

            document.getElementById('addButton').addEventListener('click', function () {
                const inputContainer = document.getElementById('inputContainer');
                const newInputGroup = document.createElement('div');
                newInputGroup.className = 'input-group';

                const textarea = document.createElement('textarea');
                textarea.id = 'autoResize';
                textarea.name = `UserInputs[${inputCount}].Text`;
                textarea.className = 'text-input';
                textarea.placeholder = 'Enter text here';

                const genderInputs = document.createElement('div');
                genderInputs.className = 'gender-inputs';

                const maleLabel = document.createElement('label');
                const maleRadio = document.createElement('input');
                maleRadio.type = 'radio';
                maleRadio.name = `UserInputs[${inputCount}].Gender`;
                maleRadio.value = 'Male';
                maleRadio.checked = true;
                maleLabel.appendChild(maleRadio);
                maleLabel.appendChild(document.createTextNode(' 남성'));

                const femaleLabel = document.createElement('label');
                const femaleRadio = document.createElement('input');
                femaleRadio.type = 'radio';
                femaleRadio.name = `UserInputs[${inputCount}].Gender`;
                femaleRadio.value = 'Female';
                femaleLabel.appendChild(femaleRadio);
                femaleLabel.appendChild(document.createTextNode(' 여성'));

                genderInputs.appendChild(maleLabel);
                genderInputs.appendChild(femaleLabel);

                newInputGroup.appendChild(textarea);
                newInputGroup.appendChild(genderInputs);
                inputContainer.appendChild(newInputGroup);

                inputCount++;
            });

            document.getElementById('ttsForm').addEventListener('submit', function (event) {

                var button = document.getElementById("convertButton");
                button.textContent = "Loading...";
                button.disabled = true;
                
                event.preventDefault();

                const formData = new FormData(this);

                fetch('@Url.Page("Index", "Transform")', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => response.json())
                    .then(audioUrls => {
                        const audioContainer = document.getElementById('audioContainer');
                        audioContainer.innerHTML = '';
                        audioUrls.forEach(function (audioUrl) {
                            const audioElement = document.createElement('div');
                            audioElement.innerHTML = `<audio controls src="${audioUrl}"></audio>`;
                            audioContainer.appendChild(audioElement);
                        });
                    })
                    .catch(() => {
                        alert("An error occurred while processing your request.");
                    })
                    .finally(() => {

                        button.textContent = "Convert to Speech";
                        button.disabled = false;

                    });
            });


            document.getElementById('combineButton').addEventListener('click', function () {
                const csrfToken = document.querySelector('input[name="__RequestVerificationToken"]').value;
                const audioElements = document.querySelectorAll('#audioContainer audio');
                const filePaths = Array.from(audioElements).map(audio => audio.src);

                fetch('@Url.Page("Index", "Combine")', {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': csrfToken,
                        'Content-Type': 'application/json; charset=utf-8'
                    },
                    body: JSON.stringify(filePaths)
                })
                .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            const combinedAudioUrl = data.combinedFileUrl;

                            const combinedAudioElement = `<div><audio controls src="${combinedAudioUrl}"></audio></div>`;
                            document.getElementById('audioContainer').innerHTML += combinedAudioElement;
                        } else {
                            alert("Failed to combine audio files.");
                        }
                    })
                    .catch(error => {
                        console.error('Error combining audio files:', error);
                    });
            });
        });
    </script>
}

@* <div class="dropdown">
    <label for="serviceSelect">클라우드 서비스:</label>
    <select id="serviceSelect", >
        <option value="google">Google</option>
        <option value="azure">Azure</option>
        <option value="openai" selected>OpenAI</option>
    </select>
</div> *@

<form id="ttsForm" method="post">
    <label for="ttsService">Select TTS Service:</label>
    <select id="ttsService" name="SelectedTtsService" asp-items="Model.TtsServicesList">
        @* <option value="">-- Select a service --</option> *@
    </select>

    <hr class="solid" />
    <div id="inputContainer">
        <div class="input-group">
            <textarea id="autoResize" name="UserInputs[0].Text" class="text-input" placeholder="Enter text here"></textarea>
            <div class="gender-inputs">
                <label><input type="radio" name="UserInputs[0].Gender" value="Male" checked> 남성</label>
                <label><input type="radio" name="UserInputs[0].Gender" value="Female"> 여성</label>
            </div>
        </div>
    </div>
    <button id="addButton" type="button">+ Add Input</button>
    <hr class="solid" />
    <button id="convertButton" type="submit">Convert to Speech</button>
</form>

<div id="audioContainer"></div>
@* <button type="button" id="combineButton">Combine Audio</button> *@





